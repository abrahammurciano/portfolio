{"ast":null,"code":"var _jsxFileName = \"/home/abraham/Documents/portfolio/src/ImageTextSplit.tsx\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { withResizeDetector } from \"react-resize-detector\";\nimport \"./ImageTextSplit.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ImageTextSplitInner extends React.Component {\n  constructor(props) {\n    super(props);\n    this.style = void 0;\n    this.imageStyle = void 0;\n    this.state = {\n      smallScreen: false\n    };\n    this.style = {\n      flexDirection: props.imageSide == \"left\" ? \"row\" : \"row-reverse\"\n    };\n    this.imageStyle = {\n      backgroundImage: `url(${props.imageSrc})`\n    };\n  }\n\n  checkSize() {\n    this.setState({\n      smallScreen: this.props.width !== undefined && this.props.width < 600\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.width !== prevProps.width) {\n      this.checkSize();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNames(\"ImageTextSplit\", {\n        \"small\": this.state.smallScreen\n      }),\n      style: this.style,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ImageTextSplit__Image\",\n        style: this.imageStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ImageTextSplit__Text\",\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst ImageTextSplit = withResizeDetector(ImageTextSplitInner);\n_c = ImageTextSplit;\nexport default ImageTextSplit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageTextSplit\");","map":{"version":3,"sources":["/home/abraham/Documents/portfolio/src/ImageTextSplit.tsx"],"names":["classNames","React","withResizeDetector","ImageTextSplitInner","Component","constructor","props","style","imageStyle","state","smallScreen","flexDirection","imageSide","backgroundImage","imageSrc","checkSize","setState","width","undefined","componentDidUpdate","prevProps","render","children","ImageTextSplit"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAgD,OAAhD;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,OAAO,sBAAP;;;AAaA,MAAMC,mBAAN,SAAkCF,KAAK,CAACG,SAAxC,CAAsG;AAIrGC,EAAAA,WAAW,CAACC,KAAD,EAAkC;AAC5C,UAAMA,KAAN;AAD4C,SAH7CC,KAG6C;AAAA,SAF7CC,UAE6C;AAE5C,SAAKC,KAAL,GAAa;AACZC,MAAAA,WAAW,EAAE;AADD,KAAb;AAGA,SAAKH,KAAL,GAAa;AACZI,MAAAA,aAAa,EAAEL,KAAK,CAACM,SAAN,IAAmB,MAAnB,GAA4B,KAA5B,GAAoC;AADvC,KAAb;AAGA,SAAKJ,UAAL,GAAkB;AACjBK,MAAAA,eAAe,EAAG,OAAMP,KAAK,CAACQ,QAAS;AADtB,KAAlB;AAGA;;AAEDC,EAAAA,SAAS,GAAG;AACX,SAAKC,QAAL,CAAc;AAAEN,MAAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWW,KAAX,KAAqBC,SAArB,IAAkC,KAAKZ,KAAL,CAAWW,KAAX,GAAmB;AAApE,KAAd;AACA;;AAEDE,EAAAA,kBAAkB,CAACC,SAAD,EAAsC;AACvD,QAAI,KAAKd,KAAL,CAAWW,KAAX,KAAqBG,SAAS,CAACH,KAAnC,EAA0C;AACzC,WAAKF,SAAL;AACA;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAErB,UAAU,CAAC,gBAAD,EAAmB;AAAE,iBAAS,KAAKS,KAAL,CAAWC;AAAtB,OAAnB,CAA1B;AAAmF,MAAA,KAAK,EAAE,KAAKH,KAA/F;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAuC,QAAA,KAAK,EAAE,KAAKC;AAAnD;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBACE,KAAKF,KAAL,CAAWgB;AADb;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAQA;;AApCoG;;AAuCtG,MAAMC,cAAc,GAAGrB,kBAAkB,CAACC,mBAAD,CAAzC;KAAMoB,c;AAEN,eAAeA,cAAf","sourcesContent":["import classNames from \"classnames\";\nimport React, { CSSProperties, ReactNode } from \"react\";\nimport { withResizeDetector } from \"react-resize-detector\";\nimport \"./ImageTextSplit.css\";\n\ninterface ImageTextSplitInnerProps {\n\timageSide?: \"left\" | \"right\";\n\timageSrc: string;\n\twidth?: number;\n\tchildren?: ReactNode;\n}\n\ninterface ImageTextSplitInnerState {\n\tsmallScreen: boolean;\n}\n\nclass ImageTextSplitInner extends React.Component<ImageTextSplitInnerProps, ImageTextSplitInnerState> {\n\tstyle: CSSProperties;\n\timageStyle: CSSProperties;\n\n\tconstructor(props: ImageTextSplitInnerProps) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsmallScreen: false,\n\t\t};\n\t\tthis.style = {\n\t\t\tflexDirection: props.imageSide == \"left\" ? \"row\" : \"row-reverse\",\n\t\t};\n\t\tthis.imageStyle = {\n\t\t\tbackgroundImage: `url(${props.imageSrc})`,\n\t\t};\n\t}\n\n\tcheckSize() {\n\t\tthis.setState({ smallScreen: this.props.width !== undefined && this.props.width < 600 });\n\t}\n\n\tcomponentDidUpdate(prevProps: ImageTextSplitInnerProps) {\n\t\tif (this.props.width !== prevProps.width) {\n\t\t\tthis.checkSize();\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={classNames(\"ImageTextSplit\", { \"small\": this.state.smallScreen })} style={this.style}>\n\t\t\t\t<div className=\"ImageTextSplit__Image\" style={this.imageStyle} />\n\t\t\t\t<div className=\"ImageTextSplit__Text\">\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst ImageTextSplit = withResizeDetector(ImageTextSplitInner);\n\nexport default ImageTextSplit;"]},"metadata":{},"sourceType":"module"}