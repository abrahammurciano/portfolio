{"ast":null,"code":"var _jsxFileName = \"/home/abraham/Documents/portfolio/src/ImageTextSplit.tsx\";\nimport React from \"react\";\nimport \"./ImageTextSplit.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ImageTextSplit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.style = void 0;\n    this.imageStyle = void 0;\n    this.ref = void 0;\n\n    this.setRef = element => {\n      this.ref = element;\n    };\n\n    this.state = {\n      smallScreen: false\n    };\n    this.style = {\n      flexDirection: props.imageSide == \"left\" ? \"row\" : \"row-reverse\"\n    };\n    this.imageStyle = {\n      backgroundImage: `url(${props.imageSrc})`\n    };\n  }\n\n  componentDidMount() {// this.re\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ImageTextSplit\",\n      style: this.style,\n      ref: this.setRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ImageTextSplit__Image\",\n        style: this.imageStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ImageTextSplit__Text\",\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default ImageTextSplit;","map":{"version":3,"sources":["/home/abraham/Documents/portfolio/src/ImageTextSplit.tsx"],"names":["React","ImageTextSplit","Component","constructor","props","style","imageStyle","ref","setRef","element","state","smallScreen","flexDirection","imageSide","backgroundImage","imageSrc","componentDidMount","render","children"],"mappings":";AAAA,OAAOA,KAAP,MAAqC,OAArC;AACA,OAAO,sBAAP;;;AAWA,MAAMC,cAAN,SAA6BD,KAAK,CAACE,SAAnC,CAAuF;AAKtFC,EAAAA,WAAW,CAACC,KAAD,EAA6B;AACvC,UAAMA,KAAN;AADuC,SAJxCC,KAIwC;AAAA,SAHxCC,UAGwC;AAAA,SAFxCC,GAEwC;;AAAA,SAaxCC,MAbwC,GAa9BC,OAAD,IAA0B;AAClC,WAAKF,GAAL,GAAWE,OAAX;AACA,KAfuC;;AAEvC,SAAKC,KAAL,GAAa;AACZC,MAAAA,WAAW,EAAE;AADD,KAAb;AAGA,SAAKN,KAAL,GAAa;AACZO,MAAAA,aAAa,EAAER,KAAK,CAACS,SAAN,IAAmB,MAAnB,GAA4B,KAA5B,GAAoC;AADvC,KAAb;AAGA,SAAKP,UAAL,GAAkB;AACjBQ,MAAAA,eAAe,EAAG,OAAMV,KAAK,CAACW,QAAS;AADtB,KAAlB;AAGA;;AAMDC,EAAAA,iBAAiB,GAAG,CACnB;AACA;;AAEDC,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,KAAK,EAAE,KAAKZ,KAA5C;AAAmD,MAAA,GAAG,EAAE,KAAKG,MAA7D;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAuC,QAAA,KAAK,EAAE,KAAKF;AAAnD;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBACE,KAAKF,KAAL,CAAWc;AADb;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAQA;;AAnCqF;;AAsCvF,eAAejB,cAAf","sourcesContent":["import React, { CSSProperties } from \"react\";\nimport \"./ImageTextSplit.css\";\n\nexport interface ImageTextSplitProps {\n\timageSide?: \"left\" | \"right\";\n\timageSrc: string;\n}\n\nexport interface ImageTextSplitState {\n\tsmallScreen: boolean;\n}\n\nclass ImageTextSplit extends React.Component<ImageTextSplitProps, ImageTextSplitState> {\n\tstyle: CSSProperties;\n\timageStyle: CSSProperties;\n\tref?: HTMLElement;\n\n\tconstructor(props: ImageTextSplitProps) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsmallScreen: false,\n\t\t};\n\t\tthis.style = {\n\t\t\tflexDirection: props.imageSide == \"left\" ? \"row\" : \"row-reverse\",\n\t\t};\n\t\tthis.imageStyle = {\n\t\t\tbackgroundImage: `url(${props.imageSrc})`,\n\t\t};\n\t}\n\n\tsetRef = (element: HTMLElement) => {\n\t\tthis.ref = element;\n\t}\n\n\tcomponentDidMount() {\n\t\t// this.re\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"ImageTextSplit\" style={this.style} ref={this.setRef}>\n\t\t\t\t<div className=\"ImageTextSplit__Image\" style={this.imageStyle} />\n\t\t\t\t<div className=\"ImageTextSplit__Text\">\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ImageTextSplit;"]},"metadata":{},"sourceType":"module"}