{"ast":null,"code":"var _jsxFileName = \"/home/abraham/Documents/portfolio/src/ImageTextSplit.tsx\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { useResizeDetector } from \"react-resize-detector\";\nimport \"./ImageTextSplit.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ImageTextSplit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.style = void 0;\n    this.imageStyle = void 0;\n    this.renderedWidth = void 0;\n    this.renderedHeight = void 0;\n    this.ref = void 0;\n    this.style = {\n      flexDirection: props.imageSide == \"left\" ? \"row\" : \"row-reverse\"\n    };\n    this.imageStyle = {\n      backgroundImage: `url(${props.imageSrc})`\n    };\n    let {\n      w,\n      h,\n      r\n    } = useResizeDetector();\n    this.renderedWidth = w;\n    this.renderedHeight = h;\n    this.ref = r;\n  }\n\n  render() {\n    console.log(this.state.smallScreen);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNames(\"ImageTextSplit\", {\n        \"small\": this.state.smallScreen\n      }),\n      style: this.style,\n      ref: this.ref,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ImageTextSplit__Image\",\n        style: this.imageStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ImageTextSplit__Text\",\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default ImageTextSplit;","map":{"version":3,"sources":["/home/abraham/Documents/portfolio/src/ImageTextSplit.tsx"],"names":["classNames","React","useResizeDetector","ImageTextSplit","Component","constructor","props","style","imageStyle","renderedWidth","renderedHeight","ref","flexDirection","imageSide","backgroundImage","imageSrc","w","h","r","render","console","log","state","smallScreen","children"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAA6E,OAA7E;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,OAAO,sBAAP;;;AAOA,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAAsE;AAOrEC,EAAAA,WAAW,CAACC,KAAD,EAA6B;AACvC,UAAMA,KAAN;AADuC,SANxCC,KAMwC;AAAA,SALxCC,UAKwC;AAAA,SAJxCC,aAIwC;AAAA,SAHxCC,cAGwC;AAAA,SAFxCC,GAEwC;AAEvC,SAAKJ,KAAL,GAAa;AACZK,MAAAA,aAAa,EAAEN,KAAK,CAACO,SAAN,IAAmB,MAAnB,GAA4B,KAA5B,GAAoC;AADvC,KAAb;AAGA,SAAKL,UAAL,GAAkB;AACjBM,MAAAA,eAAe,EAAG,OAAMR,KAAK,CAACS,QAAS;AADtB,KAAlB;AAGA,QAAI;AAAEC,MAAAA,CAAF;AAAKC,MAAAA,CAAL;AAAQC,MAAAA;AAAR,QAAchB,iBAAiB,EAAnC;AACA,SAAKO,aAAL,GAAqBO,CAArB;AACA,SAAKN,cAAL,GAAsBO,CAAtB;AACA,SAAKN,GAAL,GAAWO,CAAX;AACA;;AAEDC,EAAAA,MAAM,GAAG;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,WAAvB;AACA,wBACC;AAAK,MAAA,SAAS,EAAEvB,UAAU,CAAC,gBAAD,EAAmB;AAAE,iBAAS,KAAKsB,KAAL,CAAWC;AAAtB,OAAnB,CAA1B;AAAmF,MAAA,KAAK,EAAE,KAAKhB,KAA/F;AAAsG,MAAA,GAAG,EAAE,KAAKI,GAAhH;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAuC,QAAA,KAAK,EAAE,KAAKH;AAAnD;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBACE,KAAKF,KAAL,CAAWkB;AADb;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAQA;;AA/BoE;;AAkCtE,eAAerB,cAAf","sourcesContent":["import classNames from \"classnames\";\nimport React, { createRef, CSSProperties, MutableRefObject, RefObject } from \"react\";\nimport { useResizeDetector } from \"react-resize-detector\";\nimport \"./ImageTextSplit.css\";\n\nexport interface ImageTextSplitProps {\n\timageSide?: \"left\" | \"right\";\n\timageSrc: string;\n}\n\nclass ImageTextSplit extends React.Component<ImageTextSplitProps, {}> {\n\tstyle: CSSProperties;\n\timageStyle: CSSProperties;\n\trenderedWidth: number;\n\trenderedHeight: number;\n\tref: MutableRefObject<any>;\n\n\tconstructor(props: ImageTextSplitProps) {\n\t\tsuper(props);\n\t\tthis.style = {\n\t\t\tflexDirection: props.imageSide == \"left\" ? \"row\" : \"row-reverse\",\n\t\t};\n\t\tthis.imageStyle = {\n\t\t\tbackgroundImage: `url(${props.imageSrc})`,\n\t\t};\n\t\tlet { w, h, r } = useResizeDetector();\n\t\tthis.renderedWidth = w;\n\t\tthis.renderedHeight = h;\n\t\tthis.ref = r;\n\t}\n\n\trender() {\n\t\tconsole.log(this.state.smallScreen);\n\t\treturn (\n\t\t\t<div className={classNames(\"ImageTextSplit\", { \"small\": this.state.smallScreen })} style={this.style} ref={this.ref}>\n\t\t\t\t<div className=\"ImageTextSplit__Image\" style={this.imageStyle} />\n\t\t\t\t<div className=\"ImageTextSplit__Text\">\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ImageTextSplit;"]},"metadata":{},"sourceType":"module"}